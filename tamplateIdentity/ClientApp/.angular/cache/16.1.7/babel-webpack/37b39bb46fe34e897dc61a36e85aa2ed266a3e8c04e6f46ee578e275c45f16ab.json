{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nexport class AuthGuard {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthGuard","constructor","authService","canActivate","isLoggedIn","i0","ɵɵinject","i1","AuthService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\svenp\\source\\repos\\tamplateIdentity\\tamplateIdentity\\ClientApp\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService) {}\n\n  canActivate(): boolean {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      \n      return false;\n    }\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAE/CC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACD,WAAW,CAACE,UAAU,EAAE,EAAE;MACjC,OAAO,IAAI;KACZ,MAAM;MAEL,OAAO,KAAK;;EAEhB;;AAVWJ,SAAS,C;mBAATA,SAAS,EAAAK,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAATR,SAAS,C;SAATA,SAAS;EAAAS,OAAA,EAATT,SAAS,CAAAU,IAAA;EAAAC,UAAA,EAFR;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}