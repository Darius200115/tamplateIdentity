{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ng-angular-popup\";\nexport class AuthGuard {\n  constructor(authService, router, toast) {\n    this.authService = authService;\n    this.router = router;\n    this.toast = toast;\n  }\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      this.toast.error(detail);\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.NgToastService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthGuard","constructor","authService","router","toast","canActivate","isLoggedIn","error","detail","navigate","i0","ɵɵinject","i1","AuthService","i2","Router","i3","NgToastService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\svenp\\source\\repos\\tamplateIdentity\\tamplateIdentity\\ClientApp\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { NgToastService } from 'ng-angular-popup';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router, private toast: NgToastService) {}\n\n  canActivate(): boolean {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      this.toast.error(detail)\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\n"],"mappings":";;;;AAQA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc,EAAUC,KAAqB;IAA/E,KAAAF,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;EAAmB;EAEtGC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACH,WAAW,CAACI,UAAU,EAAE,EAAE;MACjC,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACF,KAAK,CAACG,KAAK,CAACC,MAAM,CAAC;MACxB,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;;EAEhB;;AAXWT,SAAS,C;mBAATA,SAAS,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,cAAA;AAAA;AAATjB,SAAS,C;SAATA,SAAS;EAAAkB,OAAA,EAATlB,SAAS,CAAAmB,IAAA;EAAAC,UAAA,EAFR;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}