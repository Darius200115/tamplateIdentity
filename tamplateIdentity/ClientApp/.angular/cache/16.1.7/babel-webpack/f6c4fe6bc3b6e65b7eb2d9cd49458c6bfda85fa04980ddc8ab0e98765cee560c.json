{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet AuthGuard = class AuthGuard {\n  constructor(authService, router, toast) {\n    this.authService = authService;\n    this.router = router;\n    this.toast = toast;\n  }\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n};\nAuthGuard = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthGuard);\nexport { AuthGuard };","map":{"version":3,"names":["Injectable","AuthGuard","constructor","authService","router","toast","canActivate","isLoggedIn","navigate","__decorate","providedIn"],"sources":["C:\\Users\\svenp\\source\\repos\\tamplateIdentity\\tamplateIdentity\\ClientApp\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router, private toast: NgToas) {}\n\n  canActivate(): boolean {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAOnC,IAAMC,SAAS,GAAf,MAAMA,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc,EAAUC,KAAa;IAAvE,KAAAF,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;EAAW;EAE9FC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACH,WAAW,CAACI,UAAU,EAAE,EAAE;MACjC,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;;EAEhB;CACD;AAXYP,SAAS,GAAAQ,UAAA,EAHrBT,UAAU,CAAC;EACVU,UAAU,EAAE;CACb,CAAC,C,EACWT,SAAS,CAWrB;SAXYA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}