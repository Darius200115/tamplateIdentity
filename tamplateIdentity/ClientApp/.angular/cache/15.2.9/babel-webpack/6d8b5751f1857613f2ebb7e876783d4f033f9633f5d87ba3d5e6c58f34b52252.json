{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet SignupComponent = class SignupComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.type = 'password';\n    this.isText = false;\n    this.eyeIcon = 'fa-eye-slash';\n  }\n  ngOnInit() {\n    this.signUpForm = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      userName: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  hideShowPass() {\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = 'fa-eye' : this.eyeIcon = 'fa-eye-slash';\n    this.isText ? this.type = 'text' : this.type = 'password';\n  }\n  validateAllFormFields(formGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsDirty({\n          onlySelf: true\n        });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n};\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})], SignupComponent);\nexport { SignupComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAEEC,WAAW,EACXC,SAAS,EACTC,UAAU,QACL,gBAAgB;AAOhB,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAK1BC,YAAoBC,EAAe;IAAf,OAAE,GAAFA,EAAE;IAJtB,SAAI,GAAW,UAAU;IACzB,WAAM,GAAY,KAAK;IACvB,YAAO,GAAW,cAAc;EAEM;EAEtCC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC9BC,SAAS,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MACpCC,QAAQ,EAAE,CAAC,EAAE,EAAET,UAAU,CAACQ,QAAQ,CAAC;MACnCE,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACQ,QAAQ,CAAC;MACnCG,KAAK,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACQ,QAAQ,CAAC;MAChCI,QAAQ,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACQ,QAAQ;KACnC,CAAC;EACJ;EAEAK,YAAY;IACV,IAAI,CAACC,MAAM,GAAG,CAAC,IAAI,CAACA,MAAM;IAC1B,IAAI,CAACA,MAAM,GAAI,IAAI,CAACC,OAAO,GAAG,QAAQ,GAAK,IAAI,CAACA,OAAO,GAAG,cAAe;IACzE,IAAI,CAACD,MAAM,GAAI,IAAI,CAACE,IAAI,GAAG,MAAM,GAAK,IAAI,CAACA,IAAI,GAAG,UAAW;EAC/D;EAEQC,qBAAqB,CAACC,SAAoB;IAChDC,MAAM,CAACC,IAAI,CAACF,SAAS,CAACG,QAAQ,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAI;MAChD,MAAMC,OAAO,GAAGN,SAAS,CAACO,GAAG,CAACF,KAAK,CAAC;MACpC,IAAIC,OAAO,YAAY1B,WAAW,EAAE;QAClC0B,OAAO,CAACE,WAAW,CAAC;UAAEC,QAAQ,EAAE;QAAI,CAAE,CAAC;OACxC,MAAM,IAAIH,OAAO,YAAYzB,SAAS,EAAE;QACvC,IAAI,CAACkB,qBAAqB,CAACO,OAAO,CAAC;;IAEvC,CAAC,CAAC;EACJ;CACD;AAjCYvB,eAAe,eAL3BJ,SAAS,CAAC;EACT+B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GACW7B,eAAe,CAiC3B;SAjCYA,eAAe","names":["Component","FormControl","FormGroup","Validators","SignupComponent","constructor","fb","ngOnInit","signUpForm","group","firstName","required","lastName","userName","email","password","hideShowPass","isText","eyeIcon","type","validateAllFormFields","formGroup","Object","keys","controls","forEach","field","control","get","markAsDirty","onlySelf","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\svenp\\source\\repos\\tamplateIdentity\\tamplateIdentity\\ClientApp\\src\\app\\components\\signup\\signup.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit {\n  type: string = 'password';\n  isText: boolean = false;\n  eyeIcon: string = 'fa-eye-slash';\n  signUpForm!: FormGroup;\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.signUpForm = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      userName: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  hideShowPass() {\n    this.isText = !this.isText;\n    this.isText ? (this.eyeIcon = 'fa-eye') : (this.eyeIcon = 'fa-eye-slash');\n    this.isText ? (this.type = 'text') : (this.type = 'password');\n  }\n\n  private validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach((field) => {\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsDirty({ onlySelf: true });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}